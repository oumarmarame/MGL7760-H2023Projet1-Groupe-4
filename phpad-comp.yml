version: '3.9'
services:

#Serveur Web
#############
  web:
  #nginx:
    image: nginx:latest
    container_name: Nginx
    ports:
      - "90:80"
    volumes:
      - ./web:/usr/share/nginx/html
    networks:
      - 'biblio'

#Serveur Applicatif
####################
  #wsgi:
  app:
    image: tiangolo/meinheld-gunicorn:latest
    container_name: WSGI
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - '8000:5000'
    volumes:
      - .:/var/www/html
    environment:
      FLASK_DEBUG: "true"
    networks:
      - 'biblio'
    # environment:
    #     FLASK_DEBUG: "true"

#Serveur BD
############
  db:
    image: mysql:latest
    container_name: MySQL
    ports:
      - 3306
    volumes:
      - './db:/docker-entrypoint-initdb.d'
      #- './src:/var/www/MGL7760-H2023Projet1-Groupe-4'
      #- './configs/nginx:/etc/nginx/conf.d'
      #- ./web:/usr/share/nginx/html
#    networks:
#      - 'biblio'

        # pass volume named mysql-data to mysql container
    restart: 'on-failure'
    # networks:
    #   - 'biblio'
    environment:
      MYSQL_DATABASE: biblio #ceci vas pouvoir etre consulter dans phpmyadmin
      MYSQL_ROOT_PASSWORD: root
      #MYSQL_PASSWORD: admin
      #MYSQL_USER: root
      # SERVICE_TAGS: dev 
      # SERVICE_NAME: db
      #MYSQL_ROOT_PASSWORD: admin
    #  MYSQL_ALLOW_EMPTY_PASSWORD: root
    #  MYSQL_RANDOM_ROOT_PASSWORD: root


  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin:latest
    container_name: flask_phpmyadmin
    restart: unless-stopped
    # labels:
    #   project: "flask"
    #   day: "6 Feb 2023"
    ports:
     - "5010:80"
    #  environment:
    #    PMA_HOST: db
    #    PMA_USER: admin
    #    PMA_PASSWORD: admin
    #    MYSQL_ROOT_PASSWORD: admin

#Cache MÃ©moire
###############
  cache:
    image: redis:latest
    container_name: Redis
    #ports:
    #  - "6379:80"
    # networks:
    #   - frontend
    # deploy:
    #   replicas: 2
    #   update_config:
    #     parallelism: 2
    #     delay: 10s
    #   restart_policy:
    #     condition: on-failure


# # volumes definition here
# volumes:
#   # just a persistance data
#   biblio-mysql-data:
#     driver: local

networks:
  biblio:
    driver: bridge  