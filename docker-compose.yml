version: '3.9'
services:

#Serveur Web
#############
  web:
  #nginx:
    image: nginx:latest
    container_name: Nginx
    restart: 'on-failure'
    ports:
      - "90:80"
    volumes:
      - ./web:/usr/share/nginx/html
    networks:
      - 'biblio'

#Serveur Applicatif
####################
  #wsgi:
  app:
    image: tiangolo/meinheld-gunicorn:latest
    container_name: WSGI
    #restart: 'on-failure'
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - '8000:5000'
    volumes:
      - ./app:/var/www/MGL7760-H2023Projet1-Groupe-4/app
    environment:
      FLASK_DEBUG: "true"
    networks:
      - 'biblio'

#Serveur BD
############
  db:
    image: mysql:latest
    container_name: MySQL
    restart: unless-stopped
    #restart: 'on-failure'
    ports:
      - '3306:3306' #si on ne le fixe pas il met des port aléoratoire à chaque démarage
    expose:
      - "3306"
    volumes:
      - './db:/docker-entrypoint-initdb.d'
    environment:
      MYSQL_DATABASE: biblio #ceci vas être la bd vide crée
      MYSQL_ROOT_PASSWORD: rootpw
      MYSQL_USER: db
      MYSQL_PASSWORD: dbpw
    networks:
      - 'biblio'


#Cache Mémoire
###############
  cache:
    image: redis:latest
    container_name: Redis
    restart: 'on-failure'
    #ports:
      #- 6379
    #  - "6379:80"
    # networks:
    #   - frontend
    # deploy:
    #   replicas: 2
    #   update_config:
    #     parallelism: 2
    #     delay: 10s
    #   restart_policy:
    #     condition: on-failure

networks:
  biblio:
    driver: bridge  